var test = require("tap").test;

var ap = require('../');
var pa = ap.pa;
var apa = ap.apa;
var partial = ap.partial;
var partialRight = ap.partialRight;
var curry = ap.curry;
var curryRight = ap.curryRight;

function one(x, y) {
    return x * 2 + y
}
function two(x, y, z, w) {
    return x * 2 + (y + z) * w
}
function three(x, y) {
    return this.z * (x * 2 + y)
}

var z = {
    z: 10
};

test("ap function", function (t) {
    var apOne = ap([3], one);
    t.equal(apOne(4),
        3 * 2 + 4);

    var apTwo = ap([3,4], two);
    t.equal(apTwo(5, 6),
        3 * 2 + (4 + 5) * 6);

    var apThree = ap([3], three);
    t.equal(apThree.call(z, 4),
        10 * (3 * 2 + 4));

    t.end();
});

test("pa function", function (t) {
    var paOne = pa([3], one);
    t.equal(paOne(4),
        4 * 2 + 3);

    var paTwo = pa([3,4], two);
    t.equal(paTwo(5, 6),
        5 * 2 + (6 + 3) * 4);

  var paThree = pa([3], three);
    t.equal(paThree.call(z, 4),
        10 * (4 * 2 + 3));

    t.end();
});

